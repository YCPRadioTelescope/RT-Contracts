buildscript {
	ext {
		kotlinVersion = '1.2.70'
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.radiotelescope'

version = '0.4.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

processResources {
	def profile = (project.hasProperty('profile') ? project.profile : 'local').toLowerCase()

	copy {
		from "src/main/resources/properties/application_${profile}.properties"
		into 'build/resources/main/'
		rename {
			'application.properties'
		}
	}
	copy {
		from 'src/main/resources/sql/schema-h2.sql'
		into 'build/resources'
	}
	copy {
		from 'src/main/resources/sql/seedTelescope.sql'
		into 'build/resources'
	}

	exclude("**/properties")
}

repositories {
	mavenCentral()
	mavenLocal()
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				includes = ['com.radiotelescope.contract.*',
							'com.radiotelescope.repository.*']

				minimum = 0.7
			}

			rule {
				element = 'PACKAGE'
				includes = ['com.radiotelescope.contract.*',
							'com.radiotelescope.repository.*']

				limit {
					counter = 'CLASS'
					value = 'COVEREDRATIO'
					minimum = 0.8
				}
			}
		}
	}
	dependsOn test
}

task verify(type: GradleBuild) {
	group 'Verification'
	description 'Verify the build by building, testing, and validation coverage ratio (80 or above).'
	tasks = ['build', 'test', 'jacocoTestCoverageVerification']
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')

	compile('com.fasterxml.jackson.module:jackson-module-kotlin')

	compile group: 'com.google.guava', name: 'guava', version: '19.0'
	compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'

	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile("com.h2database:h2")

	runtime('mysql:mysql-connector-java')
	runtime group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
}
