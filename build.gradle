buildscript {
	ext {
		kotlinVersion = '1.2.70'
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.radiotelescope'

version = '0.0.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

processResources {
	def profile = (project.hasProperty('profile') ? project.profile : 'local').toLowerCase()

	copy {
		from "src/main/resources/properties/application_${profile}.properties"
		into "build/resources/main/"
		rename {
			'application.properties'
		}
	}

	exclude("**/properties")
}

repositories {
	mavenCentral()
	mavenLocal()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')

	compile('com.fasterxml.jackson.module:jackson-module-kotlin')

	compile group: 'com.google.guava', name: 'guava', version: '19.0'

	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile("com.h2database:h2")

	runtime('mysql:mysql-connector-java')
}
